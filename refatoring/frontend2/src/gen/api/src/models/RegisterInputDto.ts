/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EMusicGenres } from './EMusicGenres';
import {
    EMusicGenresFromJSON,
    EMusicGenresFromJSONTyped,
    EMusicGenresToJSON,
    EMusicGenresToJSONTyped,
} from './EMusicGenres';
import type { EActivityLocation } from './EActivityLocation';
import {
    EActivityLocationFromJSON,
    EActivityLocationFromJSONTyped,
    EActivityLocationToJSON,
    EActivityLocationToJSONTyped,
} from './EActivityLocation';

/**
 * 
 * @export
 * @interface RegisterInputDto
 */
export interface RegisterInputDto {
    /**
     * 
     * @type {string}
     * @memberof RegisterInputDto
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterInputDto
     */
    nickname?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterInputDto
     */
    password?: string | null;
    /**
     * 
     * @type {EActivityLocation}
     * @memberof RegisterInputDto
     */
    activityLocation?: EActivityLocation;
    /**
     * 
     * @type {Array<EMusicGenres>}
     * @memberof RegisterInputDto
     */
    musicGenres?: Array<EMusicGenres> | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterInputDto
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof RegisterInputDto
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RegisterInputDto
     */
    integrants?: { [key: string]: string; } | null;
}



/**
 * Check if a given object implements the RegisterInputDto interface.
 */
export function instanceOfRegisterInputDto(value: object): value is RegisterInputDto {
    return true;
}

export function RegisterInputDtoFromJSON(json: any): RegisterInputDto {
    return RegisterInputDtoFromJSONTyped(json, false);
}

export function RegisterInputDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterInputDto {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'] == null ? undefined : json['email'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'password': json['password'] == null ? undefined : json['password'],
        'activityLocation': json['activityLocation'] == null ? undefined : EActivityLocationFromJSON(json['activityLocation']),
        'musicGenres': json['musicGenres'] == null ? undefined : ((json['musicGenres'] as Array<any>).map(EMusicGenresFromJSON)),
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'integrants': json['integrants'] == null ? undefined : json['integrants'],
    };
}

export function RegisterInputDtoToJSON(json: any): RegisterInputDto {
    return RegisterInputDtoToJSONTyped(json, false);
}

export function RegisterInputDtoToJSONTyped(value?: RegisterInputDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'nickname': value['nickname'],
        'password': value['password'],
        'activityLocation': EActivityLocationToJSON(value['activityLocation']),
        'musicGenres': value['musicGenres'] == null ? undefined : ((value['musicGenres'] as Array<any>).map(EMusicGenresToJSON)),
        'description': value['description'],
        'createdAt': value['createdAt'] === null ? null : ((value['createdAt'] as any)?.toISOString()),
        'integrants': value['integrants'],
    };
}

