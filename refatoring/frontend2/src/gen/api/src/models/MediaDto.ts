/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MediaDto
 */
export interface MediaDto {
    /**
     * 
     * @type {number}
     * @memberof MediaDto
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    src?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    nickname?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof MediaDto
     */
    creationTime?: Date;
}

/**
 * Check if a given object implements the MediaDto interface.
 */
export function instanceOfMediaDto(value: object): value is MediaDto {
    return true;
}

export function MediaDtoFromJSON(json: any): MediaDto {
    return MediaDtoFromJSONTyped(json, false);
}

export function MediaDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'src': json['src'] == null ? undefined : json['src'],
        'title': json['title'] == null ? undefined : json['title'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'description': json['description'] == null ? undefined : json['description'],
        'creationTime': json['creationTime'] == null ? undefined : (new Date(json['creationTime'])),
    };
}

export function MediaDtoToJSON(json: any): MediaDto {
    return MediaDtoToJSONTyped(json, false);
}

export function MediaDtoToJSONTyped(value?: MediaDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'src': value['src'],
        'title': value['title'],
        'nickname': value['nickname'],
        'description': value['description'],
        'creationTime': value['creationTime'] == null ? undefined : ((value['creationTime']).toISOString()),
    };
}

