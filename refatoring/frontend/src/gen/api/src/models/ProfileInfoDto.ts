/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BandDto } from './BandDto';
import {
    BandDtoFromJSON,
    BandDtoFromJSONTyped,
    BandDtoToJSON,
} from './BandDto';
import type { BannerInfos } from './BannerInfos';
import {
    BannerInfosFromJSON,
    BannerInfosFromJSONTyped,
    BannerInfosToJSON,
} from './BannerInfos';
import type { ProfileInfoPhotoDto } from './ProfileInfoPhotoDto';
import {
    ProfileInfoPhotoDtoFromJSON,
    ProfileInfoPhotoDtoFromJSONTyped,
    ProfileInfoPhotoDtoToJSON,
} from './ProfileInfoPhotoDto';
import type { ProfileInfoVideoDto } from './ProfileInfoVideoDto';
import {
    ProfileInfoVideoDtoFromJSON,
    ProfileInfoVideoDtoFromJSONTyped,
    ProfileInfoVideoDtoToJSON,
} from './ProfileInfoVideoDto';

/**
 * 
 * @export
 * @interface ProfileInfoDto
 */
export interface ProfileInfoDto {
    /**
     * 
     * @type {string}
     * @memberof ProfileInfoDto
     */
    name?: string;
    /**
     * 
     * @type {BannerInfos}
     * @memberof ProfileInfoDto
     */
    banner?: BannerInfos;
    /**
     * 
     * @type {string}
     * @memberof ProfileInfoDto
     */
    cityName?: string;
    /**
     * 
     * @type {string}
     * @memberof ProfileInfoDto
     */
    avatarUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileInfoDto
     */
    isEnabledToEdit?: boolean;
    /**
     * 
     * @type {BandDto}
     * @memberof ProfileInfoDto
     */
    band?: BandDto;
    /**
     * 
     * @type {Array<ProfileInfoPhotoDto>}
     * @memberof ProfileInfoDto
     */
    profileInfoPhotos?: Array<ProfileInfoPhotoDto>;
    /**
     * 
     * @type {Array<ProfileInfoVideoDto>}
     * @memberof ProfileInfoDto
     */
    profileInfoVideos?: Array<ProfileInfoVideoDto>;
}

/**
 * Check if a given object implements the ProfileInfoDto interface.
 */
export function instanceOfProfileInfoDto(value: object): boolean {
    return true;
}

export function ProfileInfoDtoFromJSON(json: any): ProfileInfoDto {
    return ProfileInfoDtoFromJSONTyped(json, false);
}

export function ProfileInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileInfoDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'banner': json['banner'] == null ? undefined : BannerInfosFromJSON(json['banner']),
        'cityName': json['cityName'] == null ? undefined : json['cityName'],
        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],
        'isEnabledToEdit': json['isEnabledToEdit'] == null ? undefined : json['isEnabledToEdit'],
        'band': json['band'] == null ? undefined : BandDtoFromJSON(json['band']),
        'profileInfoPhotos': json['profileInfoPhotos'] == null ? undefined : ((json['profileInfoPhotos'] as Array<any>).map(ProfileInfoPhotoDtoFromJSON)),
        'profileInfoVideos': json['profileInfoVideos'] == null ? undefined : ((json['profileInfoVideos'] as Array<any>).map(ProfileInfoVideoDtoFromJSON)),
    };
}

export function ProfileInfoDtoToJSON(value?: ProfileInfoDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'banner': BannerInfosToJSON(value['banner']),
        'cityName': value['cityName'],
        'avatarUrl': value['avatarUrl'],
        'isEnabledToEdit': value['isEnabledToEdit'],
        'band': BandDtoToJSON(value['band']),
        'profileInfoPhotos': value['profileInfoPhotos'] == null ? undefined : ((value['profileInfoPhotos'] as Array<any>).map(ProfileInfoPhotoDtoToJSON)),
        'profileInfoVideos': value['profileInfoVideos'] == null ? undefined : ((value['profileInfoVideos'] as Array<any>).map(ProfileInfoVideoDtoToJSON)),
    };
}

