/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberInfoDto
 */
export interface MemberInfoDto {
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    instrument?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    profileURL?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    avatarURL?: string | null;
}

/**
 * Check if a given object implements the MemberInfoDto interface.
 */
export function instanceOfMemberInfoDto(value: object): value is MemberInfoDto {
    return true;
}

export function MemberInfoDtoFromJSON(json: any): MemberInfoDto {
    return MemberInfoDtoFromJSONTyped(json, false);
}

export function MemberInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberInfoDto {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'name': json['name'] == null ? undefined : json['name'],
        'instrument': json['instrument'] == null ? undefined : json['instrument'],
        'profileURL': json['profileURL'] == null ? undefined : json['profileURL'],
        'avatarURL': json['avatarURL'] == null ? undefined : json['avatarURL'],
    };
}

export function MemberInfoDtoToJSON(json: any): MemberInfoDto {
    return MemberInfoDtoToJSONTyped(json, false);
}

export function MemberInfoDtoToJSONTyped(value?: MemberInfoDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'name': value['name'],
        'instrument': value['instrument'],
        'profileURL': value['profileURL'],
        'avatarURL': value['avatarURL'],
    };
}

