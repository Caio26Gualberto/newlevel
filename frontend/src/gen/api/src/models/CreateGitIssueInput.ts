/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EGitLabels } from './EGitLabels';
import {
    EGitLabelsFromJSON,
    EGitLabelsFromJSONTyped,
    EGitLabelsToJSON,
    EGitLabelsToJSONTyped,
} from './EGitLabels';

/**
 * 
 * @export
 * @interface CreateGitIssueInput
 */
export interface CreateGitIssueInput {
    /**
     * 
     * @type {string}
     * @memberof CreateGitIssueInput
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateGitIssueInput
     */
    description?: string | null;
    /**
     * 
     * @type {Array<EGitLabels>}
     * @memberof CreateGitIssueInput
     */
    gitLabels?: Array<EGitLabels> | null;
}

/**
 * Check if a given object implements the CreateGitIssueInput interface.
 */
export function instanceOfCreateGitIssueInput(value: object): value is CreateGitIssueInput {
    return true;
}

export function CreateGitIssueInputFromJSON(json: any): CreateGitIssueInput {
    return CreateGitIssueInputFromJSONTyped(json, false);
}

export function CreateGitIssueInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateGitIssueInput {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'gitLabels': json['gitLabels'] == null ? undefined : ((json['gitLabels'] as Array<any>).map(EGitLabelsFromJSON)),
    };
}

export function CreateGitIssueInputToJSON(json: any): CreateGitIssueInput {
    return CreateGitIssueInputToJSONTyped(json, false);
}

export function CreateGitIssueInputToJSONTyped(value?: CreateGitIssueInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'gitLabels': value['gitLabels'] == null ? undefined : ((value['gitLabels'] as Array<any>).map(EGitLabelsToJSON)),
    };
}

