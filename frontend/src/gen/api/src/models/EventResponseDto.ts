/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EEventStatus } from './EEventStatus';
import {
    EEventStatusFromJSON,
    EEventStatusFromJSONTyped,
    EEventStatusToJSON,
    EEventStatusToJSONTyped,
} from './EEventStatus';
import type { BandDto } from './BandDto';
import {
    BandDtoFromJSON,
    BandDtoFromJSONTyped,
    BandDtoToJSON,
    BandDtoToJSONTyped,
} from './BandDto';
import type { EMusicGenres } from './EMusicGenres';
import {
    EMusicGenresFromJSON,
    EMusicGenresFromJSONTyped,
    EMusicGenresToJSON,
    EMusicGenresToJSONTyped,
} from './EMusicGenres';
import type { PhotoResponseDto } from './PhotoResponseDto';
import {
    PhotoResponseDtoFromJSON,
    PhotoResponseDtoFromJSONTyped,
    PhotoResponseDtoToJSON,
    PhotoResponseDtoToJSONTyped,
} from './PhotoResponseDto';

/**
 * 
 * @export
 * @interface EventResponseDto
 */
export interface EventResponseDto {
    /**
     * 
     * @type {number}
     * @memberof EventResponseDto
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof EventResponseDto
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventResponseDto
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof EventResponseDto
     */
    dateStart?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof EventResponseDto
     */
    dateEnd?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof EventResponseDto
     */
    location?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventResponseDto
     */
    bannerUrl?: string | null;
    /**
     * 
     * @type {number}
     * @memberof EventResponseDto
     */
    bannerPosition?: number | null;
    /**
     * 
     * @type {number}
     * @memberof EventResponseDto
     */
    organizerId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof EventResponseDto
     */
    organizerName?: string | null;
    /**
     * 
     * @type {Array<EMusicGenres>}
     * @memberof EventResponseDto
     */
    genre?: Array<EMusicGenres> | null;
    /**
     * 
     * @type {string}
     * @memberof EventResponseDto
     */
    ticketsLink?: string | null;
    /**
     * 
     * @type {number}
     * @memberof EventResponseDto
     */
    price?: number | null;
    /**
     * 
     * @type {number}
     * @memberof EventResponseDto
     */
    capacity?: number | null;
    /**
     * 
     * @type {EEventStatus}
     * @memberof EventResponseDto
     */
    eventStatus?: EEventStatus;
    /**
     * 
     * @type {Array<BandDto>}
     * @memberof EventResponseDto
     */
    bands?: Array<BandDto> | null;
    /**
     * 
     * @type {Array<PhotoResponseDto>}
     * @memberof EventResponseDto
     */
    photos?: Array<PhotoResponseDto> | null;
    /**
     * 
     * @type {number}
     * @memberof EventResponseDto
     */
    commentsCount?: number | null;
}



/**
 * Check if a given object implements the EventResponseDto interface.
 */
export function instanceOfEventResponseDto(value: object): value is EventResponseDto {
    return true;
}

export function EventResponseDtoFromJSON(json: any): EventResponseDto {
    return EventResponseDtoFromJSONTyped(json, false);
}

export function EventResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'dateStart': json['dateStart'] == null ? undefined : (new Date(json['dateStart'])),
        'dateEnd': json['dateEnd'] == null ? undefined : (new Date(json['dateEnd'])),
        'location': json['location'] == null ? undefined : json['location'],
        'bannerUrl': json['bannerUrl'] == null ? undefined : json['bannerUrl'],
        'bannerPosition': json['bannerPosition'] == null ? undefined : json['bannerPosition'],
        'organizerId': json['organizerId'] == null ? undefined : json['organizerId'],
        'organizerName': json['organizerName'] == null ? undefined : json['organizerName'],
        'genre': json['genre'] == null ? undefined : ((json['genre'] as Array<any>).map(EMusicGenresFromJSON)),
        'ticketsLink': json['ticketsLink'] == null ? undefined : json['ticketsLink'],
        'price': json['price'] == null ? undefined : json['price'],
        'capacity': json['capacity'] == null ? undefined : json['capacity'],
        'eventStatus': json['eventStatus'] == null ? undefined : EEventStatusFromJSON(json['eventStatus']),
        'bands': json['bands'] == null ? undefined : ((json['bands'] as Array<any>).map(BandDtoFromJSON)),
        'photos': json['photos'] == null ? undefined : ((json['photos'] as Array<any>).map(PhotoResponseDtoFromJSON)),
        'commentsCount': json['commentsCount'] == null ? undefined : json['commentsCount'],
    };
}

export function EventResponseDtoToJSON(json: any): EventResponseDto {
    return EventResponseDtoToJSONTyped(json, false);
}

export function EventResponseDtoToJSONTyped(value?: EventResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'dateStart': value['dateStart'] === null ? null : ((value['dateStart'] as any)?.toISOString()),
        'dateEnd': value['dateEnd'] === null ? null : ((value['dateEnd'] as any)?.toISOString()),
        'location': value['location'],
        'bannerUrl': value['bannerUrl'],
        'bannerPosition': value['bannerPosition'],
        'organizerId': value['organizerId'],
        'organizerName': value['organizerName'],
        'genre': value['genre'] == null ? undefined : ((value['genre'] as Array<any>).map(EMusicGenresToJSON)),
        'ticketsLink': value['ticketsLink'],
        'price': value['price'],
        'capacity': value['capacity'],
        'eventStatus': EEventStatusToJSON(value['eventStatus']),
        'bands': value['bands'] == null ? undefined : ((value['bands'] as Array<any>).map(BandDtoToJSON)),
        'photos': value['photos'] == null ? undefined : ((value['photos'] as Array<any>).map(PhotoResponseDtoToJSON)),
        'commentsCount': value['commentsCount'],
    };
}

