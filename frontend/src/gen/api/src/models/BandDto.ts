/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntegrantInfoDto } from './IntegrantInfoDto';
import {
    IntegrantInfoDtoFromJSON,
    IntegrantInfoDtoFromJSONTyped,
    IntegrantInfoDtoToJSON,
    IntegrantInfoDtoToJSONTyped,
} from './IntegrantInfoDto';

/**
 * 
 * @export
 * @interface BandDto
 */
export interface BandDto {
    /**
     * 
     * @type {string}
     * @memberof BandDto
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BandDto
     */
    instagramUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BandDto
     */
    youtubeUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BandDto
     */
    spotifyUrl?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof BandDto
     */
    isVerified?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BandDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof BandDto
     */
    musicGenres?: Array<string> | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof BandDto
     */
    integrants?: { [key: string]: string; } | null;
    /**
     * 
     * @type {Array<IntegrantInfoDto>}
     * @memberof BandDto
     */
    integrantsWithUrl?: Array<IntegrantInfoDto> | null;
}

/**
 * Check if a given object implements the BandDto interface.
 */
export function instanceOfBandDto(value: object): value is BandDto {
    return true;
}

export function BandDtoFromJSON(json: any): BandDto {
    return BandDtoFromJSONTyped(json, false);
}

export function BandDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BandDto {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'instagramUrl': json['instagramUrl'] == null ? undefined : json['instagramUrl'],
        'youtubeUrl': json['youtubeUrl'] == null ? undefined : json['youtubeUrl'],
        'spotifyUrl': json['spotifyUrl'] == null ? undefined : json['spotifyUrl'],
        'isVerified': json['isVerified'] == null ? undefined : json['isVerified'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'musicGenres': json['musicGenres'] == null ? undefined : json['musicGenres'],
        'integrants': json['integrants'] == null ? undefined : json['integrants'],
        'integrantsWithUrl': json['integrantsWithUrl'] == null ? undefined : ((json['integrantsWithUrl'] as Array<any>).map(IntegrantInfoDtoFromJSON)),
    };
}

export function BandDtoToJSON(json: any): BandDto {
    return BandDtoToJSONTyped(json, false);
}

export function BandDtoToJSONTyped(value?: BandDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'instagramUrl': value['instagramUrl'],
        'youtubeUrl': value['youtubeUrl'],
        'spotifyUrl': value['spotifyUrl'],
        'isVerified': value['isVerified'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'musicGenres': value['musicGenres'],
        'integrants': value['integrants'],
        'integrantsWithUrl': value['integrantsWithUrl'] == null ? undefined : ((value['integrantsWithUrl'] as Array<any>).map(IntegrantInfoDtoToJSON)),
    };
}

