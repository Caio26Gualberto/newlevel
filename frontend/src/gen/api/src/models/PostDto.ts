/* tslint:disable */
/* eslint-disable */
/**
 * NewLevel
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaDto } from './MediaDto';
import {
    MediaDtoFromJSON,
    MediaDtoFromJSONTyped,
    MediaDtoToJSON,
    MediaDtoToJSONTyped,
} from './MediaDto';
import type { CommentsListDto } from './CommentsListDto';
import {
    CommentsListDtoFromJSON,
    CommentsListDtoFromJSONTyped,
    CommentsListDtoToJSON,
    CommentsListDtoToJSONTyped,
} from './CommentsListDto';
import type { PhotoResponseDto } from './PhotoResponseDto';
import {
    PhotoResponseDtoFromJSON,
    PhotoResponseDtoFromJSONTyped,
    PhotoResponseDtoToJSON,
    PhotoResponseDtoToJSONTyped,
} from './PhotoResponseDto';

/**
 * 
 * @export
 * @interface PostDto
 */
export interface PostDto {
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    postId?: number;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    commentsCount?: number;
    /**
     * 
     * @type {string}
     * @memberof PostDto
     */
    content?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PostDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<CommentsListDto>}
     * @memberof PostDto
     */
    comments?: Array<CommentsListDto> | null;
    /**
     * 
     * @type {Array<PhotoResponseDto>}
     * @memberof PostDto
     */
    photos?: Array<PhotoResponseDto> | null;
    /**
     * 
     * @type {Array<MediaDto>}
     * @memberof PostDto
     */
    medias?: Array<MediaDto> | null;
}

/**
 * Check if a given object implements the PostDto interface.
 */
export function instanceOfPostDto(value: object): value is PostDto {
    return true;
}

export function PostDtoFromJSON(json: any): PostDto {
    return PostDtoFromJSONTyped(json, false);
}

export function PostDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDto {
    if (json == null) {
        return json;
    }
    return {
        
        'postId': json['postId'] == null ? undefined : json['postId'],
        'commentsCount': json['commentsCount'] == null ? undefined : json['commentsCount'],
        'content': json['content'] == null ? undefined : json['content'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'comments': json['comments'] == null ? undefined : ((json['comments'] as Array<any>).map(CommentsListDtoFromJSON)),
        'photos': json['photos'] == null ? undefined : ((json['photos'] as Array<any>).map(PhotoResponseDtoFromJSON)),
        'medias': json['medias'] == null ? undefined : ((json['medias'] as Array<any>).map(MediaDtoFromJSON)),
    };
}

export function PostDtoToJSON(json: any): PostDto {
    return PostDtoToJSONTyped(json, false);
}

export function PostDtoToJSONTyped(value?: PostDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'postId': value['postId'],
        'commentsCount': value['commentsCount'],
        'content': value['content'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'comments': value['comments'] == null ? undefined : ((value['comments'] as Array<any>).map(CommentsListDtoToJSON)),
        'photos': value['photos'] == null ? undefined : ((value['photos'] as Array<any>).map(PhotoResponseDtoToJSON)),
        'medias': value['medias'] == null ? undefined : ((value['medias'] as Array<any>).map(MediaDtoToJSON)),
    };
}

